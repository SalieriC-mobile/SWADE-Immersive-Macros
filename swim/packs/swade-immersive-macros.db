{"_id":"16BhpuoWcfgtjaVg","name":"Loot-o-Mat","type":"script","author":"wpWSO3unowg8siJN","img":"icons/commodities/currency/coins-plain-pouch-gold.webp","scope":"global","command":"swim.loot_o_mat();","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dkPv3fqSEOytHgSz"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"3LQo36mZ4ZeVq2eB","name":"Deviation","type":"script","author":"wpWSO3unowg8siJN","img":"icons/weapons/thrown/dynamite-simple-brown.webp","scope":"global","command":"swim.deviation()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.kqNehEXmaItvZ0ZU"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"49TiCaAgArpHsAhz","name":"[Script] SWIM: Ammo usage","type":"script","author":"wpWSO3unowg8siJN","img":"icons/weapons/crossbows/crossbow-long-brown.webp","scope":"global","command":"// Getting NPC ammo usage from game settings\nconst npcAmmo = game.settings.get(\n    'swim', 'npcAmmo');\n\ncheckWeapon();\n\nasync function wait(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\nasync function checkWeapon() {\n    //Don't execute the macro on a reroll by checking if the old_rolls is empty:\n    if (message.data.flags['betterrolls-swade2'].render_data.trait_roll.old_rolls.length >= 1) { return; }\n    //Check whether or not the weapon is suitable for the shooting macro\n    if (\n        (item.type === \"weapon\" &&\n            //i.data.data.range !== \"0\" && i.data.data.range !== \"\" &&\n            item.data.data.ammo.trim() !== \"\" &&\n            item.data.data.quantity > 0) ||\n        (item.type === \"weapon\" &&\n            //i.data.data.range !== \"0\" && i.data.data.range !== \"\" &&\n            item.data.data.additionalStats.isConsumable &&\n            item.data.data.additionalStats.isConsumable.value === true /*&&\n            //Ignore quantity to get a notification below for BR2 integration.\n            item.data.data.quantity > 0*/)\n    ) { shoot(); }\n    else { return; }\n}\n\nasync function shoot() {\n    //let [shots, weapon, ammo, sil] = getValues(html);\n    let item_weapon = item;\n    //Stop if the item is not a weapon:\n    if (item_weapon.type != \"weapon\") { return; }\n    //Get ammo loaded in the weapon and amount of shots provided by BR2 as well as a silenced state:\n    let item_ammo;\n    if (item_weapon.data.data.additionalStats.loadedAmmo) {\n        let loaded_ammo = item_weapon.data.data.additionalStats.loadedAmmo.value;\n        item_ammo = actor.items.getName(`${loaded_ammo}`);\n    } else if (item_weapon.data.data.ammo) {\n        item_ammo = actor.items.getName(`${item_weapon.data.data.ammo}`);\n    }\n    //Setting the amount of shots based on RoF:\n    let traitDice = message.data.flags['betterrolls-swade2'].render_data.trait_roll.dice;\n    //console.log(traitDice);\n    //console.log(message.data.flags['betterrolls-swade2'].render_data);\n    let rate_of_fire = traitDice.length;\n    if (actor.data.data.wildcard === true) { rate_of_fire = rate_of_fire - 1; }\n    //console.log(rate_of_fire);\n    let shots = message.data.flags['betterrolls-swade2'].render_data.used_shots;\n    //failsafe to guss amount of shots in case BR2 return zero or undefined:\n    if (shots === 0 || !shots) {\n        if (rate_of_fire === 1) { shots = 1; }\n        if (rate_of_fire === 2) { shots = 5; }\n        if (rate_of_fire === 3) { shots = 10; }\n        if (rate_of_fire === 4) { shots = 20; }\n        if (rate_of_fire === 5) { shots = 40; }\n        if (rate_of_fire === 6) { shots = 50; }\n    }\n\n    let sil = false;\n    if (item_weapon.data.data.additionalStats.silenced && item_weapon.data.data.additionalStats.silenced.value === true) {\n        sil = true;\n    }\n    // Getting sfxDelay from game settings\n    let sfxDelay = game.settings.get(\n        'swim', 'sfxDelay');\n    // Getting the sfx from the weapon provided by BR2:\n    let sfx_shot;\n    let sfx_silenced;\n    let sfx_shot_auto;\n    let sfx_silenced_auto;\n    let sfx_empty;\n    if (item_weapon.data.data.additionalStats.sfx) {\n        let sfx = item_weapon.data.data.additionalStats.sfx.value.split(`|`);\n        sfx_shot = sfx[1];\n        sfx_silenced = sfx[3];\n        sfx_shot_auto = sfx[2];\n        sfx_silenced_auto = sfx[4];\n        sfx_empty = sfx[5];\n    }\n    // Getting Weapon and loaded ammo\n    const weaponIMG = item_weapon.data.img;\n    let currentAmmo\n    if (item_weapon.data.data.additionalStats.loadedAmmo) {\n        currentAmmo = item_weapon.data.data.additionalStats.loadedAmmo.value;\n    }\n\n    // Calculating shots to expend\n    const currentCharges = parseInt(item_weapon.data.data.currentShots);\n    const newCharges = currentCharges - shots;\n    //If no ammo needed, only play SFX\n    if (item_weapon.data.data.ammo === \"NONE\" && item_weapon.data.data.additionalStats.sfx) {\n        // Play sound effects\n        await play_sfx(sil, sfx_silenced, shots, sfxDelay, sfx_silenced_auto, sfx_shot, sfx_shot_auto);\n\n    } else if (item_weapon.data.data.ammo === \"MELEE\" && item_weapon.data.data.additionalStats.sfx) {\n        let meleeSFX = item_weapon.data.data.additionalStats.sfx.value.split(\"|\");\n        let attackSFX = meleeSFX[0];\n        let frenzySFX = meleeSFX[1];\n        let frenzyImpSFX = meleeSFX[2];\n        if (rate_of_fire === 1) { AudioHelper.play({ src: `${attackSFX}` }, true); }\n        else if (rate_of_fire === 2) { AudioHelper.play({ src: `${frenzySFX}` }, true); }\n        else if (rate_of_fire >= 3) { AudioHelper.play({ src: `${frenzyImpSFX}` }, true); }\n    }\n    else if (item_weapon.data.data.additionalStats.isConsumable && item_weapon.data.data.additionalStats.isConsumable.value === true) {\n        //Get Skill from BR2. This returns as \"Skill dx\" so we need to filter that later...\n        let usedSkill = message.data.flags['betterrolls-swade2'].render_data.skill_title;\n        //We assume that all consumable weapons use \"Athletics\", \"Athletics (Throwing)\", \"Athletics (Explosives)\" or \"Throwing\" and only proceed if one of these skills was used. This is where we filter with .includes().\n        if (usedSkill.includes(\"Athletics\") === false &&\n            usedSkill.includes(\"Athletics (Throwing)\") === false &&\n            usedSkill.includes(\"Athletics (Explosives)\") === false &&\n            usedSkill.includes(\"Throwing\") === false &&\n            usedSkill.includes(\"Stealth\") === false) { return; }\n        const currentQuantity = parseInt(item_weapon.data.data.quantity);\n        if (currentQuantity <= 0) {\n            return ui.notifications.error(`You don't have a ${item_weapon.name} left.`);\n        }\n        const newQuantity = currentQuantity - shots;\n        const updates = [\n            { _id: item_weapon.id, \"data.quantity\": `${newQuantity}` },\n        ];\n        // Updating the consumable weapon\n        await actor.updateEmbeddedDocuments(\"Item\", updates);\n        // Deleting the consumable weapon if it was the last (disabled because it breaks rerolls in BR2)\n        /*if (newQuantity <= 0) {\n            item_weapon.delete();\n        }*/\n        // Creating the Chat message\n        ChatMessage.create({\n            speaker: {\n                alias: actor.name\n            },\n            content: `<img src=\"${weaponIMG}\" alt=\"\" width=\"25\" height=\"25\" /> ${actor.name} uses ${shots} ${item_weapon.name}(s) and has ${newQuantity} left.`\n        })\n        // Play sound effects\n        if (sfx_shot) {\n            AudioHelper.play({ src: `${sfx_shot}` }, true);\n        }\n    }\n    //Stuff for weapons with \"doesn't require reload action\" checked:\n    else if (item_weapon.data.data.autoReload === true) {\n        //Throw error if no ammo is left.\n        if (actor.type != \"character\" && npcAmmo === false) {\n            ChatMessage.create({\n                speaker: {\n                    alias: actor.name\n                },\n                content: `<img src=\"${weaponIMG}\" alt=\"\" width=\"25\" height=\"25\" /> ${actor.name} fires <b>${shots} ${currentAmmo}</b> from a ${item_weapon.name}.`\n            })\n        } else if (!item_ammo && actor.type === \"character\" && npcAmmo === false || !item_ammo && npcAmmo === true) {\n            return ui.notifications.error(`You don't have the required ammo in your inventory.`);\n        } else if (item_ammo.data.data.quantity <= 0 && actor.type === \"character\" && npcAmmo === false || item_ammo.data.data.quantity <= 0 && npcAmmo === true) { return ui.notifications.error(`You don't have a ${item_ammo.name} left.`); }\n        else {\n            //Setting new constants to overwrite the old ones\n            const currentCharges = parseInt(item_ammo.data.data.quantity);\n            const newCharges = currentCharges - shots;\n            //Setting up the updates\n            const updates = [\n                { _id: item_ammo.id, \"data.quantity\": `${newCharges}` },\n            ];\n            // Updating the Weapon\n            actor.updateEmbeddedDocuments(\"Item\", updates);\n            //Creating the chat message\n            ChatMessage.create({\n                speaker: {\n                    alias: actor.name\n                },\n                content: `<img src=\"${weaponIMG}\" alt=\"\" width=\"25\" height=\"25\" /> ${actor.name} fires <b>${shots} ${currentAmmo} round(s)</b> from a ${item_weapon.name} and has <b>${newCharges} left</b>.`\n            })\n        }\n        //Playing the SFX\n        // Play sound effects\n        await play_sfx(sil, sfx_silenced, shots, sfxDelay, sfx_silenced_auto, sfx_shot, sfx_shot_auto);\n    }\n    // Check if enough bullets are in the weapon to fire the given amount of shots if this is not a consumable weapon and does require loading action.\n    else if (currentCharges < shots && item_weapon.data.data.autoReload === false) {\n        ui.notifications.error(\"You have insufficient ammunition.\");\n        if (sfx_empty && currentCharges === 0) {\n            AudioHelper.play({ src: `${sfx_empty}` }, true);\n        }\n        return;\n    }\n    else {\n        const updates = [\n            { _id: item_weapon.id, \"data.currentShots\": `${newCharges}` },\n        ];\n        // Updating the Weapon\n        actor.updateEmbeddedDocuments(\"Item\", updates);\n        // Creating the Chat message\n        if (!currentAmmo) {\n            ChatMessage.create({\n                speaker: {\n                    alias: actor.name\n                },\n                content: `<img src=\"${weaponIMG}\" alt=\"\" width=\"25\" height=\"25\" /> ${actor.name} fires <b>${shots} round(s)</b> from a ${item_weapon.name} and has <b>${newCharges} left</b>.`\n            })\n        } else {\n            ChatMessage.create({\n                speaker: {\n                    alias: actor.name\n                },\n                content: `<img src=\"${weaponIMG}\" alt=\"\" width=\"25\" height=\"25\" /> ${actor.name} fires <b>${shots} ${currentAmmo} round(s)</b> from a ${item_weapon.name} and has <b>${newCharges} left</b>.`\n            })\n        }\n        // Play sound effects\n        await play_sfx(sil, sfx_silenced, shots, sfxDelay, sfx_silenced_auto, sfx_shot, sfx_shot_auto);\n    }\n\n    async function play_sfx(sil, sfx_silenced, shots, sfxDelay, sfx_silenced_auto, sfx_shot, sfx_shot_auto) {\n        // Play sound effects\n        if (sil === true && sfx_silenced) {\n            if (shots === 2) {\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n            }\n            else if (shots === 3) {\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n            }\n            else if (shots > 3 && sfx_silenced_auto) {\n                AudioHelper.play({ src: `${sfx_silenced_auto}` }, true);\n            }\n            else {\n                AudioHelper.play({ src: `${sfx_silenced}` }, true);\n            }\n        }\n        else {\n            if (shots === 2) {\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n            }\n            else if (shots === 3) {\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n                await wait(`${sfxDelay}`);\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n            }\n            else if (shots > 3 && sfx_shot_auto) {\n                AudioHelper.play({ src: `${sfx_shot_auto}` }, true);\n            }\n            else {\n                AudioHelper.play({ src: `${sfx_shot}` }, true);\n            }\n        }\n    }\n\n    //V. 4.0.2 by SalieriC#8263 with help from javierrivera#4813.\n}","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.mMb87BLxl6JfQXQ1"},"cf":{"id":"temp_jourp6m45s","color":"#000000"}}}
{"_id":"65ORJqJs0ZbSLfVH","name":"Falling Damage","type":"script","author":"IdtUiVfyz7G35nSj","img":"modules/swim/assets/icons/macros/falling_sbed_game-icons.net.png","scope":"global","command":"swim.falling_damage()","folder":null,"sort":0,"permission":{"default":0,"IdtUiVfyz7G35nSj":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.jThmDNQbKYsyoRwn"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000"}}}
{"_id":"8x4O1clQ3tgRqJql","name":"Shape Changer","type":"script","author":"0KMJjNMbqQRfm9Y9","img":"icons/magic/nature/elemental-plant-humanoid.webp","scope":"global","command":"/*******************************************************\n * SWADE Immersive Macros (SWIM) proudly presents:\n * The Shape Changer Macro.\n * This macro tries to handle everything relevant to the\n * Shape Change power in SWADE. It is in early stages,\n * so bugs may occur. Please create a ticket on the\n * gitHub if you find any problems with it:\n * https://github.com/SalieriC/SWADE-Immersive-Macros/issues/new\n * \n * This macro requires Warp Gate by honeybadger:\n * https://foundryvtt.com/packages/warpgate\n * \n * The Macro natively supports Sound Effects and if you\n * are using the Sequencer module by Wasp \n * (https://foundryvtt.com/packages/sequencer), you can\n * also play a visual effect. SFX and VFX are configured\n * in the module settings of SWIM.\n * By SalieriC\n ******************************************************/\nswim.shape_changer();","folder":null,"sort":0,"permission":{"default":0,"0KMJjNMbqQRfm9Y9":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.3M8owJoKHsz8Mqtx"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000"}}}
{"_id":"9dtnshN7kP4if8ij","name":"Unshake (SWD)","type":"script","author":"wpWSO3unowg8siJN","img":"modules/swim/assets/icons/status_markers/0-Shaken.png","scope":"global","command":"swim.unshake(version=\"SWD\")","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.xwvNVeOMp5PjtWaK"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"AVvWoCTnMr3BsQSm","name":"[Currently Broken] Power Point Management","type":"script","author":"wpWSO3unowg8siJN","img":"icons/tools/laboratory/vials-blue-pink.webp","scope":"global","command":"swim.start_macro(`[Script] Power Point Management`);","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.ETeZuCGyTERwAF0N"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"AWEIhBfGUmhQlww5","name":"Soak Damage","type":"script","author":"wpWSO3unowg8siJN","img":"modules/swim/assets/icons/status_markers/3-Incapacitated.png","scope":"global","command":"swim.soak_damage()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.amSPIEmiOJ50t3bJ"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"CxPniQpzW1lsgI48","name":"#[CF_tempEntity]","type":"chat","author":"IdtUiVfyz7G35nSj","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"IdtUiVfyz7G35nSj":3},"flags":{"cf":{"id":"temp_jourp6m45s","folderPath":[],"color":"#000000","fontColor":"#FFFFFF","name":"BR2 Macros (read documentation first)","children":[],"icon":"","contents":[]}}}
{"name":"#[CF_tempEntity]","type":"chat","author":"wpWSO3unowg8siJN","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"cf":{"id":"temp_buxlo0gl30f","folderPath":[],"color":"#000000","fontColor":"#FFFFFF","name":"User Macros (use these)","children":[],"icon":""}},"_id":"FgoCvb7wHtcpMdeG"}
{"_id":"IZ4E126a8yMoayRq","name":"Ammo Management (enhanced) [READ THE DOC!]","type":"script","author":"wpWSO3unowg8siJN","img":"icons/weapons/crossbows/crossbow-white.webp","scope":"global","command":"swim.ammo_management()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.XEYSVDTmQli1bqlu"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"K1ELhIaPyCB3a4Z1","name":"Mark Dead","type":"script","author":"wpWSO3unowg8siJN","img":"icons/commodities/bones/skull-hollow-brown.webp","scope":"global","command":"swim.mark_dead()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.8azlZlxGRBdmCaVi"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"VRjvUlcygBnOR1CI","name":"Personal Health Centre","type":"script","author":"wpWSO3unowg8siJN","img":"icons/commodities/materials/bowl-powder-blue.webp","scope":"global","command":"swim.personal_health_centre()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.SjOf7Sp0D4ljIWfQ"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"VVJVbPkovo0H5j6O","name":"Scale Calculator","type":"script","author":"wpWSO3unowg8siJN","img":"icons/tools/hand/scale-balances-merchant-brown.webp","scope":"global","command":"swim.scale_calculator()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.QTFeoKrOii26UDIj"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"VtvWTHd09dooSAzf","name":"Unstun","type":"script","author":"wpWSO3unowg8siJN","img":"modules/swim/assets/icons/status_markers/2-Stunned.png","scope":"global","command":"swim.unstun()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.5XICveYBi2K3XduI"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"X2IrJP6NIJtSVRUj","name":"Fear Table","type":"script","author":"wpWSO3unowg8siJN","img":"icons/commodities/biological/eye-blue-gold.webp","scope":"global","command":"swim.fear_table()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.8yUqe3V9NkdWCbrV"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"aICo2SY2iXzP4Qv4","name":"Radiation Centre","type":"script","author":"QOFbFt0NQ026fV5u","img":"modules/swim/assets/icons/status_markers/0-Irradiated.png","scope":"global","command":"swim.radiation_centre()","folder":null,"sort":0,"permission":{"default":0,"QOFbFt0NQ026fV5u":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.XBWSxklBK4giCOsi"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000"}}}
{"_id":"g9us9LnoDi64bvQZ","name":"Chase Setup","type":"script","author":"wpWSO3unowg8siJN","img":"icons/skills/movement/figure-running-gray.webp","scope":"global","command":"swim.chase_setup()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.fj8L2PMCcSe76fzi"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"knYY3V5ly2iZ7cc4","name":"Unshake (SWADE)","type":"script","author":"wpWSO3unowg8siJN","img":"modules/swim/assets/icons/status_markers/0-Shaken.png","scope":"global","command":"swim.unshake(version=\"SWADE\")","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.xwvNVeOMp5PjtWaK"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"tWfoXYvJzvFGVN6Q","name":"Token Vision","type":"script","author":"wpWSO3unowg8siJN","img":"icons/sundries/lights/torch-black.webp","scope":"global","command":"swim.token_vision()","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.e3HFjRo6KaIDsfCR"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"yu0weHeD5tg1XssD","name":"Spend Benny","type":"script","author":"wpWSO3unowg8siJN","img":"icons/commodities/currency/coin-embossed-octopus-gold.webp","scope":"global","command":"swim.spend_benny(token, message=true)","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.nAubNq7dYQUz6DaP"},"cf":{"id":"temp_buxlo0gl30f","color":"#000000","path":"Full Script (do not use)"}}}
{"_id":"49TiCaAgArpHsAhz","name":"[Script] SWIM: Ammo usage","type":"script","author":"wpWSO3unowg8siJN","img":"icons/weapons/crossbows/crossbow-long-brown.webp","scope":"global","command":"swim.br2_ammo_management(message, actor, item)","folder":null,"sort":0,"permission":{"default":0,"wpWSO3unowg8siJN":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.mMb87BLxl6JfQXQ1"},"cf":{"id":"temp_jourp6m45s","color":"#000000"}}}
